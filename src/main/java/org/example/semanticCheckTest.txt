section .data
а dd 2
б dd 3
global _start
section .text
сумма:
    push rbp
    mov rbp, rsp
    sub rsp, 8
    mov ECX, dword [rbp+16]
    mov EBX, dword [rbp+24]
    mov RAX, RCX
    add RAX, RBX
    leave
    ret
разность:
    push rbp
    mov rbp, rsp
    sub rsp, 8
    mov ECX, dword [rbp+16]
    mov EBX, dword [rbp+24]
    mov RAX, RCX
    sub RAX, RBX
    leave
    ret
умножение:
    push rbp
    mov rbp, rsp
    sub rsp, 8
    mov ECX, dword [rbp+16]
    mov EBX, dword [rbp+24]
    push RDX
    mov RAX, RCX
    imul RAX, RBX
    pop RDX
    leave
    ret
деление:
    push rbp
    mov rbp, rsp
    sub rsp, 8
    mov ECX, dword [rbp+16]
    mov EBX, dword [rbp+24]
    push RDX
    mov RAX, RCX
    cqo
    idiv RBX
    pop RDX
    leave
    ret
_start:
    push rbp
    mov rbp, rsp
    sub rsp, 4
    mov RCX, 2
    mov dword[rbp+0], RCX
L0:
    mov ECX, dword [rbp+0]
    mov RBX, 6
    cmp RCX, RBX
    jge L3
    mov RCX, 0
    sub rsp, 8
    mov [rbp-12], RCX
    jmp L4
L3:
    add rsp, 8
    mov RCX, 1
    mov [rbp-12], RCX
L4:
    mov RCX, [rbp-12]
    cmp RCX, 0
    je L1
    mov ECX, [б]
    push RCX
    mov EBX, [а]
    push RBX
    call сумма
    add rsp, 16
    add rsp, 4
    mov ECX, [б]
    push RCX
    mov EBX, [а]
    push RBX
    call разность
    add rsp, 16
    mov ECX, [б]
    push RCX
    mov EBX, [а]
    push RBX
    call умножение
    add rsp, 16
L2:
    sub rsp, 4
    mov ECX, dword [rbp+0]
    mov RBX, 1
    mov RAX, RCX
    add RAX, RBX
    mov dword[rbp+0], RAX
    jmp L0
    add rsp, 4
    mov ECX, [б]
    push RCX
    mov EBX, [а]
    push RBX
    call деление
    add rsp, 16
    mov rax, 60
    syscall